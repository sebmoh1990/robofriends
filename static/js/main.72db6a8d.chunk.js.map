{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","_ref","name","email","id","React","createElement","className","alt","src","concat","CardList","robots","map","user","i","key","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","ErrorBoundary","Component","constructor","super","this","state","hasError","componentDidCatch","error","info","setState","render","App","onSearchChange","event","searchfield","target","value","componentDidMount","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","StrictMode"],"mappings":"yLAwBeA,MAtBFC,IAAuB,IAAtBC,KAACA,EAAIC,MAAEA,EAAKC,GAAEA,GAAGH,EAG3B,OAIMI,IAAAC,cAAA,OAAKC,UAAU,uDAEZF,IAAAC,cAAA,OAAKE,IAAI,QAAQC,IAAG,wBAAAC,OAA0BN,EAAE,cAE7CC,IAAAC,cAAA,WAEED,IAAAC,cAAA,UAAKJ,EAAK,KACVG,IAAAC,cAAA,SAAIH,MCqBPQ,MAlCEV,IAAc,IAAbW,OAACA,GAAOX,EAI1B,OAEMI,IAAAC,cAAA,WAKCM,EAAOC,IAAI,CAACC,EAAMC,IAItBV,IAAAC,cAACN,EAAI,CACJgB,IAAKD,EACLX,GAAIQ,EAAOG,GAAGX,GACdF,KAAMU,EAAOG,GAAGb,KAChBC,MAAOS,EAAOG,GAAGZ,WCCNc,MApBGhB,IAAoB,IAAnBiB,aAACA,GAAajB,EAE7B,OAEKI,IAAAC,cAAA,OAAKC,UAAU,OAEbF,IAAAC,cAAA,SACAC,UAAU,mCACVY,KAAK,SACLC,YAAY,gBACZC,SAAYH,MCIRI,MAfCC,GAIVlB,IAAAC,cAAA,OAAKkB,MAAO,CAACC,SAAU,SAAUC,OAAO,kBAAmBC,OAAQ,UAEzDJ,EAAMK,UC8BPC,MAnCf,cAA4BC,YAGxBC,YAAYR,GAEXS,MAAMT,GACNU,KAAKC,MAAQ,CAEZC,UAAW,GAKjBC,kBAAkBC,EAAOC,GAGnBL,KAAKM,SAAS,CAAEJ,UAAU,IAMhCK,SAGC,OAAIP,KAAKC,MAAMC,SAEP9B,IAAAC,cAAA,UAAI,8BAGL2B,KAAKV,MAAMK,iBC+BJa,MAzDf,cAAkBX,YAEjBC,cAECC,QAAOC,KAgBTS,eAAkBC,KAEjBV,KAAKM,SAAS,CAACK,YAAaD,EAAME,OAAOC,UAjBxCb,KAAKC,MAAQ,CAEZtB,OAAS,GACTgC,YAAc,IAIjBG,oBAECC,MAAM,8CACJC,KAAKC,GAAYA,EAASC,QAC1BF,KAAKG,GAAQnB,KAAKM,SAAS,CAAE3B,OAAQwC,KAUxCZ,SACC,MAAM5B,OAACA,EAAMgC,YAAEA,GAAeX,KAAKC,MAE9BmB,EAAiBzC,EAAO0C,OAAOC,GAE5BA,EAAMrD,KAAKsD,cAAcC,SAASb,EAAYY,gBAGvD,OAAQ5C,EAAO8C,OAKVrD,IAAAC,cAAA,OAAKC,UAAU,MACfF,IAAAC,cAAA,MAAIC,UAAU,MAAK,iBACnBF,IAAAC,cAACW,EAAS,CAACC,aAAgBe,KAAKS,iBAChCrC,IAAAC,cAACgB,EAAM,KACDjB,IAAAC,cAACuB,EAAa,KACfxB,IAAAC,cAACK,EAAQ,CAACC,OAAQyC,OAR3BhD,IAAAC,cAAA,UAAI,aC/BUqD,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAd,KAAAa,EAAAE,KAAA,UAAqBf,KAAKhD,IAAiD,IAAhDgE,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASpE,EACpEgE,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,MCADU,IAASC,WAAWC,SAASC,eAAe,SACpDjC,OACHnC,IAAAC,cAACD,IAAMqE,WAAU,KACfrE,IAAAC,cAACmC,EAAG,QAORkB","file":"static/js/main.72db6a8d.chunk.js","sourcesContent":["import React from 'react';\r\nimport 'tachyons';\r\nconst Card = ({name, email, id}) => {\r\n\r\n\r\n    return (\r\n            \r\n\r\n                   \r\n          <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n          \t\r\n             <img alt='robot' src={`https://robohash.org/${id}?200x200`}/>\r\n\r\n                <div>\r\n\r\n                  <h2>{name} </h2>\r\n                  <p>{email}</p>\r\n\r\n                </div>\r\n          </div>\r\n\r\n\t\t    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n\r\n\t\r\n\r\nreturn (\r\n\r\n      <div>\r\n\r\n      { \r\n\r\n\r\n      \trobots.map((user, i) => {\r\n\r\n\t\treturn (\r\n\t\t\t\r\n\t\t\t<Card \r\n\t\t\t\tkey={i} \r\n\t\t\t\tid={robots[i].id} \r\n\t\t\t\tname={robots[i].name} \r\n\t\t\t\temail={robots[i].email}\r\n\t\t    />\r\n\t\t   \r\n\t        );\r\n\r\n\t}) \r\n\r\n      }\r\n\r\n      \t</div>\r\n\r\n\t);\r\n\t\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n\r\n    return (\r\n         \r\n         <div className='pa2'>\r\n\t          \r\n\t          <input \r\n\t          className='pa3 ba b--green bg-lightest-blue'\r\n\t          type='search' \r\n\t          placeholder='search robots' \r\n\t          onChange = {searchChange}\r\n\t          />\r\n\r\n          </div>\r\n    \t);\r\n\r\n\r\n\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n\r\n\treturn (\r\n\r\n      <div style={{overflow: 'scroll', border:'5px solid black', height: '800px'}}>\r\n              \r\n               {props.children}\r\n\r\n      </div>\r\n\r\n\r\n\r\n\t\t);\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\n\r\nclass ErrorBoundary extends Component {\r\n\r\n\r\n    constructor(props){\r\n\r\n    \tsuper(props);\r\n    \tthis.state = {\r\n\r\n    \t\thasError : false\r\n    \t}\r\n    }\r\n\r\n\r\ncomponentDidCatch(error, info) {\r\n\r\n\r\n      this.setState({ hasError: true})\r\n\r\n}\r\n\r\n\r\n\r\nrender() {\r\n\r\n\r\n\tif (this.state.hasError){\r\n\r\n\t\treturn <h1>Ooooops. That is not good </h1>\r\n\t}\r\n\r\n\treturn this.props.children\r\n}\r\n\r\n}\r\n\r\nexport default ErrorBoundary;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n\r\n\tconstructor () {\r\n\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\r\n\t\t\trobots : [],\r\n\t\t\tsearchfield : ''\r\n\t\t}\r\n\t}\r\n\r\ncomponentDidMount() {\r\n\r\n\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t.then(response => response.json())\r\n\t\t.then(users =>this.setState({ robots: users}));\r\n\t\r\n}\r\n\r\nonSearchChange = (event) => {\r\n\r\n\tthis.setState({searchfield: event.target.value})\r\n\t\t\r\n}\r\n\r\nrender(){\r\n\tconst {robots, searchfield} = this.state;\r\n\r\nconst filteredRobots = robots.filter(robot => {\r\n\r\n\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n\t});\r\n\r\nreturn !robots.length ?\r\n\t\r\n\t<h1>Loading</h1>:\r\n\t\r\n     (\r\n     <div className='tc'>\r\n     <h1 className=\"f1\"> RoboFriends </h1>\r\n     <SearchBox searchChange = {this.onSearchChange}/>\r\n     <Scroll>\r\n           <ErrorBoundary>\r\n     \t    <CardList robots={filteredRobots}/>\r\n     \t </ErrorBoundary>\r\n     </Scroll>\r\n     </div>\r\n     );\r\n\r\n\t\r\n}\r\n\r\n}\r\n  \r\n\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}